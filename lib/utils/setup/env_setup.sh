#!/usr/bin/env bash
# ==========================================================
# File: lib/utils/init_lib.sh
# Purpose: Common setup helpers
# ==========================================================
# NOTE! This file must be *sourced* by init.sh – do not run it directly.
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  printf "This script must be sourced, not executed directly.\n" >&2
  return 1 2>/dev/null || exit 1
fi

validate_subnet() {
  local subnet="$1"
  if [[ ! "$subnet" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
    err "Invalid subnet format: $subnet"
    return 1
  fi
}

create_or_edit_env_file() {
  echo
  info "Generating/updating .env …"
  local env_file="$SCRIPT_DIR/.env"; local mysql_user url_host subnet_ip

  if [[ -f "$env_file" && ${NON_INTERACTIVE} == false ]]; then
    read -rp ".env exists. Overwrite? [y/N]: " ans
    [[ $ans =~ ^[Yy]$ ]] || { warn "Cancelled by user."; return 0; }
  fi

  if ${NON_INTERACTIVE}; then
    err "--non-interactive mode requires pre-defined variables."
    return 1
  fi

  local default_mysql_user="user"
  local default_url_host="localhost"
  local default_subnet_ip="172.20.0.0"

  if [[ -z "$SERVER_NAME" || -z "$NORMAL_MYSQL_USER" || -z "$SUBNET" ]]; then
    warn "Custom environment variables are not set in init.conf, interactive mode will be used."
    echo
    important "Creating .env file for environment variables."
    info "Leave the fields empty to use defaults."
    read -rp "MySQL username (default: $default_mysql_user): " mysql_user
    read -rp "Domain/URL without https:// (default: $default_url_host): " url_host
    read -rp "Subnet Ip (default: $default_subnet_ip): " subnet_ip

    mysql_user="${mysql_user:-$default_mysql_user}"
    url_host="${url_host:-$default_url_host}"
    subnet_ip="${subnet_ip:-$default_subnet_ip}"

  else
    mysql_user="$NORMAL_MYSQL_USER"
    url_host="$SERVER_NAME"
    subnet_ip="$SUBNET"
    echo
    info "Using environment variables from init.conf."
    echo "Using MySQL user: $mysql_user"
    echo "Using domain/URL: $url_host"
    echo "Using subnet IP: $subnet_ip"
  fi

  validate_subnet "$subnet_ip" || {
    err "Invalid subnet IP: $subnet_ip"
    return 1
  }

  FRONTEND_IP="${subnet_ip%.*}.20"
  BACKEND_IP="${subnet_ip%.*}.30"
  NGINX_IP="${subnet_ip%.*}.40"
  MYSQL_IP="${subnet_ip%.*}.50"
  PYTHON_IP="${subnet_ip%.*}.60"

  cat > "$env_file" <<EOF
# Autogenerated $(date +%F)
NODE_ENV=development
VITE_API_URL=https://${url_host}/api
BASE_URL=/
VITE_WS_URL=ws://${url_host}

DB_HOST=mysql
DB_USER=${mysql_user}
DB_NAME=mydb
CORS_ORIGIN=https://${url_host}

# Self-signed cert details
NGINX_SERVER_NAME=${url_host}
NGINX_SERVER_NAME_WWW=www.${url_host}
SSL_DIR=/etc/nginx/ssl
SSL_COUNTRY_NAME=NO
SSL_STATE_OR_PROVINCE_NAME=Trondelag
SSL_LOCALITY_NAME=Trondheim
SSL_ORGANIZATION_NAME=Private

MYSQL_USER=${mysql_user}
MYSQL_DATABASE=mydb

SUBNET=${subnet_ip}/16
FRONTEND_IP=${FRONTEND_IP}
BACKEND_IP=${BACKEND_IP}
NGINX_IP=${NGINX_IP}
MYSQL_IP=${MYSQL_IP}
PYTHON_IP=${PYTHON_IP}
EOF
  chmod 600 "$env_file"
  info "Wrote $env_file"
}

# shellcheck disable=SC2153
inject_env() {
  info "Running lib/tools/inject_env.py …"
  (cd "$SCRIPT_DIR/lib/tools" && "$PYTHON_BIN" inject_env.py)
}
